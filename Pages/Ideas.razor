@page "/Ideas"

@page "/fetchdata"


@inject IIdeaRepository repository;

<h1>Ideas</h1>

@if (isShow)
{
    <div class="modal-body">
        <form>
            <div class="form-group">
                <label for="exampleInputEmail1">아이디</label>
                <input type="text" class="form-control" @bind="@idea.Note">
            </div>
            <button type="button" class="btn btn-primary" @onclick="btnSave_Click">Submit</button>
            <button type="button" class="btn btn-primary" @onclick="btnClose_Click">Close</button>
        </form>
    </div>
}


@if (ideas == null)
{
    <p><em>Loading...</em></p>
}
else if (ideas.Count == 0)
{
    <p><em>Nothing...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Note</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var idea in ideas)
            {
                <tr>
                    <td>@idea.ID</td>
                    <td>@idea.Note</td>
                </tr>
            }
        </tbody>
    </table>
}
<input type="button" value="글스기" @onclick="btnCreate_Click" class="btn btn-primary" />



@code {
    Idea idea = new Idea();

    private bool isShow = false;

    private List<Idea> ideas;

    protected override async Task OnInitializedAsync()
    {
        ideas = await repository.GetIdeas();
    }

    private void btnCreate_Click()
    {
        isShow = true;
    }

    private void btnClose_Click()
    {
        isShow = false;
        idea = new Idea();
    }

    private async void btnSave_Click()
    {
        await repository.AddIdea(idea);
        ideas = await repository.GetIdeas();
        idea = new Idea();

        StateHasChanged();
    }
}